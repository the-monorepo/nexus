{"version":3,"sources":["../src/index.ts"],"names":["nextid","generateBlueprintUid","renderData","first","state","createBlueprint","mount","update","unmount","id","CachedField","init","fieldValues","v","value","set","AttributeField","constructor","el","key","setAttribute","attribute","PropertyField","setter","property","EventField","setEvent","event","textBlueprint","container","before","node","document","createTextNode","toString","insertBefore","data","renderResult","renderComponentResultNoSet","renderInfo","blueprint","componentResult","replaceOldResult","oldResult","undefined","removeUntilBefore","indexKeyer","item","i","componentResultFromValue","valueType","Symbol","iterator","map","trackedNodes","WeakMap","render","renderValue","get","updateComponentResultsArray","newComponentResults","results","oldHead","newHead","oldLength","newLength","newRenderResults","Array","oldTail","newTail","renderOrReuseComponentResult","oldNextMarker","firstToRemoveMarker","lastToRemoveMarker","insertAdditionalPartsBefore","mapBlueprint","initialValues","j","marker","createComment","itemData","newInput","itemValue","length","DynamicSection","fill","result","f","fieldValue","dynamicSection","ChildrenField","children","staticFragmentBlueprint","html","template","createElement","innerHTML","rootElement","content","nothing","cloned","importNode","firstChild","staticElementBlueprint","isReusableRenderResult","initialDomFieldSetter","fields","domFieldSetter","domFieldUnmount","field","elementBlueprint","fieldFactory","fragmentBlueprint","SpreadField","applySpread","spread","startElement","stopElement","nextSibling","removeChild","moveUntilBefore","newContainer","removeAttribute","removeEvent","eventObject","removeEventListener","handle","options","newValue","addEventListener","EVENT_PREFIX_REGEX","PROPERTY_PREFIX_REGEX","EVENT_TYPE","PROPERTY_TYPE","ATTRIBUTE_TYPE","fieldInfo","type","fieldInfoFromKey","match","replace","newKeys","Set","prefixedKey","Object","entries","add","has","generateMap","list","start","end","Map","movePart","newResult","canReuseRemovedPart","oldKeyToIndexMap","newIndex","oldIndex","repeatBlueprint","initialInput","initialContainer","keys","values","mapFn","keyFn","newKeyToIndexMap","nextOldHead","nextOldTail","nextNewTail","nextOldIndex","keyedComponents","recycle","repeat","rerender","target","symbol","kind","extras","placement","descriptor","UPDATE","oldDescriptor","Error","RootlessDomElement","HTMLElement","renderRoot","mountRenderRoot","connectedCallback","disconnectedCallback","LightDomElement","DomElement","attachShadow","mode"],"mappings":"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","sourcesContent":["let nextid = 0;\nconst generateBlueprintUid = () => nextid++;\n\nexport type MountFn<V, R extends StatelessCloneInfo<any> | RenderData<any, any>> = (\n  v: V,\n  container: Node,\n  before: Node | null,\n) => R;\nexport type Id = number | any;\nexport type StatelessCloneInfo<N extends Node> = {\n  first: N;\n  state: undefined;\n};\nexport type Unmount<C> = (cloneValue: C) => any;\nexport type UnmountHolder<C> = {\n  unmount: Unmount<C>;\n};\nexport type StatelessComponentBlueprint<\n  V,\n  N extends Node,\n  D = Unmount<any> | undefined\n> = {\n  id: Id;\n  mount: MountFn<V, StatelessCloneInfo<N>>;\n  update: undefined;\n  unmount: D;\n};\nexport type StatefulComponentBlueprint<\n  C,\n  V,\n  N extends Node,\n  D = Unmount<any> | undefined\n> = {\n  id: Id;\n  mount: MountFn<V, RenderData<C, N>>;\n  update: SetFn<C, V>;\n  unmount: D;\n};\nexport type GenericBlueprint<C, V, N extends Node = Node, D = undefined | Unmount<C>> =\n  | StatelessComponentBlueprint<V, N, D>\n  | StatefulComponentBlueprint<C, V, N, D>;\nexport type ComponentBlueprint<\n  C,\n  V,\n  N extends Node = Node,\n  D = undefined | Unmount<C>\n> = GenericBlueprint<C, V, N, D>;\n\nexport type CreateBlueprintFunction = {\n  <V, N extends Node>(\n    clone: MountFn<V, StatelessCloneInfo<N>>,\n  ): StatelessComponentBlueprint<V, N, undefined> & UnmountHolder<undefined>;\n  <V, C, N extends Node>(\n    clone: MountFn<V, RenderData<C, N>>,\n    update: SetFn<C, V>,\n  ): StatefulComponentBlueprint<C, V, N, undefined> & UnmountHolder<undefined>;\n  <V, C, N extends Node>(\n    clone: MountFn<V, RenderData<C, N>>,\n    update: undefined,\n    unmount: Unmount<C>,\n  ): StatelessComponentBlueprint<V, N> & UnmountHolder<C>;\n  <V, C, N extends Node>(\n    clone: MountFn<V, RenderData<C, N>>,\n    update: SetFn<C, V>,\n    unmount: Unmount<C>,\n  ): StatefulComponentBlueprint<C, V, N> & UnmountHolder<C>;\n};\n\nexport type CloneInfoFunction = {\n  <N extends Node>(first: N): StatelessCloneInfo<N>;\n  <N extends Node, C>(first: N, state: C): RenderData<C, N>;\n};\nexport const renderData: CloneInfoFunction = <C, N extends Node | null>(\n  first: N,\n  state?: C,\n) => ({\n  first,\n  state,\n});\n\nexport const createBlueprint: CreateBlueprintFunction = (mount, update?, unmount?) => ({\n  id: generateBlueprintUid(),\n  mount,\n  update,\n  unmount,\n});\n\nabstract class CachedField implements Field {\n  protected state = null;\n  protected abstract set(value);\n\n  init(fieldValues, v) {\n    const value = fieldValues[v++];\n    this.set(value);\n    this.state = value;\n    return v;\n  }\n\n  update(fieldValues, v) {\n    const value = fieldValues[v++];\n    if (this.state !== value) {\n      this.set(value);\n      this.state = value;\n    }\n    return v;\n  }\n}\n\nclass AttributeField extends CachedField {\n  constructor(private readonly el: Element, private readonly key: string) {\n    super();\n  }\n\n  set(value) {\n    setAttribute(this.el, this.key, value);\n  }\n}\n\nexport const attribute = (el: Element, key: string): AttributeField => {\n  return new AttributeField(el, key);\n};\n\nexport type PropertySetter = (node: Element, value: any) => any;\nclass PropertyField extends CachedField {\n  constructor(private readonly el: Element, private readonly setter: PropertySetter) {\n    super();\n  }\n  set(value) {\n    this.setter(this.el, value);\n  }\n}\nexport const property = <E extends Element = any>(\n  el: E,\n  setter: PropertySetter,\n): PropertyField => {\n  return new PropertyField(el, setter);\n};\n\nclass EventField extends CachedField {\n  constructor(private readonly el: Element, private readonly key: string) {\n    super();\n  }\n  set(value) {\n    setEvent(this.el, this.key, this.state, value);\n  }\n}\nexport const event = <E extends Element = any>(el: E, key: string): EventField => {\n  return new EventField(el, key);\n};\n\nexport type Field = {\n  init: (fieldValues: readonly any[], v: number) => number;\n  update: (fieldValues: readonly any[], v: number) => number;\n};\nexport type TextBlueprintInput = string | boolean | number;\nconst textBlueprint = createBlueprint(\n  (value: TextBlueprintInput, container, before) => {\n    const node = document.createTextNode(value.toString());\n    container.insertBefore(node, before);\n    return renderData(node, node);\n  },\n  (state, value) => {\n    if (state.state.data !== value) {\n      state.state.data = value.toString();\n    }\n  },\n);\n\nexport type MapBlueprintState<C, N extends Node = Node> = {\n  results: (RenderResult<C, N> | null)[];\n};\n\nexport const renderResult = <C, N extends Node>(\n  id: number,\n  data: RenderData<any, N>,\n  unmount?: Unmount<C>,\n): RenderResult<C, N> => ({\n  id,\n  data,\n  unmount,\n});\n\nexport const renderComponentResultNoSet = <C, V, N extends Node>(\n  renderInfo: ComponentResult<C, V, N>,\n  container: Node,\n  before: Node | null,\n): RenderResult<C, N> => {\n  const blueprint = renderInfo.blueprint;\n  const data = blueprint.mount(renderInfo.value, container, before);\n  return renderResult(blueprint.id, data, blueprint.unmount);\n};\n\nexport const componentResult = <C, V, N extends Node>(\n  blueprint: ComponentBlueprint<C, V, N>,\n  value: V,\n): ComponentResult<C, V, N> => ({\n  blueprint,\n  value,\n});\n\nexport const replaceOldResult = <C, V, N extends Node>(\n  renderInfo: ComponentResult<C, V, N>,\n  container: Node,\n  oldResult: RenderResult<C, N>,\n  before: Node | null,\n) => {\n  if (oldResult.unmount !== undefined) {\n    oldResult.unmount(oldResult.data.state);\n  }\n  removeUntilBefore(container, oldResult.data.first, before);\n  return renderComponentResultNoSet(renderInfo, container, before);\n};\n\nconst indexKeyer = (item, i) => i;\nexport const componentResultFromValue = (value) => {\n  const valueType = typeof value;\n  if (valueType === 'string' || valueType === 'number' || valueType === 'boolean') {\n    return componentResult(textBlueprint, value as string | number | boolean);\n  } else if (value[Symbol.iterator] !== undefined) {\n    return map(value, indexKeyer, componentResultFromValue);\n  } else {\n    return value;\n  }\n};\n\nconst trackedNodes = new WeakMap<Node, RenderResult<any> | undefined>();\nexport const render = (value: unknown, container: Node) => {\n  const renderResult = renderValue(value, trackedNodes.get(container), container, null);\n  trackedNodes.set(container, renderResult);\n};\n\nexport const updateComponentResultsArray = <C, V, N extends Node>(\n  newComponentResults: ComponentResult<C, V, N>[],\n  results: (RenderResult<C, N> | null)[],\n  oldHead: number,\n  newHead: number,\n  oldLength: number,\n  newLength: number,\n  container: Node,\n  before: Node | null,\n): RenderResult<C, N>[] => {\n  const newRenderResults: RenderResult<C, N>[] = new Array(newLength);\n\n  // Head and tail pointers to old parts and new values\n  let oldTail = oldLength - 1;\n  let newTail = newLength - 1;\n\n  while (oldHead <= oldTail && newHead <= newTail) {\n    if (results[oldHead] === null) {\n      // `null` means old part at head has already been used\n      // below; skip\n      oldHead++;\n    } else if (results[oldTail] === null) {\n      // `null` means old part at tail has already been used\n      // below; skip\n      oldTail--;\n    } else if (results[oldHead]!.id === newComponentResults[newHead].blueprint.id) {\n      // Old head matches new head; update in place\n      newRenderResults[newHead] = renderOrReuseComponentResult(\n        newComponentResults[newHead],\n        results[oldHead]!,\n        container,\n        oldHead + 1 >= oldLength ? before : results[oldHead + 1]!.data.first,\n      )!;\n      oldHead++;\n      newHead++;\n    } else if (results[oldTail]!.id === newComponentResults[newTail].blueprint.id) {\n      // Old tail matches new tail; update in place\n      newRenderResults[newTail] = renderOrReuseComponentResult(\n        newComponentResults[newTail],\n        results[oldTail]!,\n        container,\n        oldTail + 1 >= oldLength ? before : results[oldTail + 1]!.data.first,\n      )!;\n      oldTail--;\n      newTail--;\n    } else if (results[oldHead]!.id === newComponentResults[newTail].blueprint.id) {\n      // Old head matches new tail; update and move to new tail\n      newRenderResults[newTail] = renderOrReuseComponentResult(\n        newComponentResults[newTail],\n        results[oldHead]!,\n        container,\n        newTail + 1 < newLength ? newRenderResults[newTail + 1].data.first : before,\n      )!;\n      newTail--;\n      oldHead++;\n    } else if (results[oldTail]!.id === newComponentResults[newHead].blueprint.id) {\n      // Old tail matches new head; update and move to new head\n      newRenderResults[newTail] = renderOrReuseComponentResult(\n        newComponentResults[newHead],\n        results[oldTail]!,\n        container,\n        results[oldHead]!.data.first,\n      )!;\n      newHead++;\n      oldTail++;\n    } else {\n      const oldNextMarker =\n        oldHead + 1 < oldLength ? results[oldHead + 1]!.data.first : before;\n      removeUntilBefore(container, results[oldHead]!.data.first, oldNextMarker);\n      oldHead++;\n    }\n  }\n\n  if (oldHead <= oldTail) {\n    const firstToRemoveMarker = results[oldHead]!.data.first;\n    const lastToRemoveMarker =\n      newTail + 1 < newLength ? newRenderResults[newTail + 1]!.data.first : before;\n    removeUntilBefore(container, firstToRemoveMarker, lastToRemoveMarker);\n  } else {\n    // Add parts for any remaining new values\n    const insertAdditionalPartsBefore =\n      newTail + 1 < newLength ? newRenderResults[newTail + 1].data.first : before;\n    let i = newHead;\n    while (i <= newTail) {\n      newRenderResults[i] = renderComponentResultNoSet(\n        newComponentResults[i],\n        container,\n        insertAdditionalPartsBefore,\n      );\n      i++;\n    }\n  }\n  return newRenderResults;\n};\n\nconst mapBlueprint: GenericBlueprint<\n  MapBlueprintState<unknown>,\n  Iterable<any>\n> = createBlueprint(\n  (\n    initialValues: Iterable<any>,\n    container,\n    before,\n  ): RenderData<MapBlueprintState<unknown>> => {\n    const results: RenderResult<unknown>[] = [];\n    let j = 0;\n    const marker = document.createComment('');\n    container.insertBefore(marker, before);\n    for (const itemData of initialValues) {\n      if (itemData != null) {\n        const componentResult = componentResultFromValue(itemData);\n        results[j++] = renderComponentResultNoSet(componentResult, container, before);\n      }\n    }\n    const state = { results };\n    return renderData(marker, state);\n  },\n  (\n    state: RenderData<MapBlueprintState<unknown>>,\n    newInput: Iterable<any>,\n    container: Node,\n    before: Node | null,\n  ) => {\n    const results = state.state.results;\n    const newComponentResults: ComponentResult<unknown, unknown, Node>[] = [];\n    let j = 0;\n    for (const itemValue of newInput) {\n      if (itemValue != null) {\n        const componentResult = componentResultFromValue(itemValue);\n        newComponentResults[j++] = componentResult;\n      }\n    }\n\n    const oldLength = results.length;\n    const newLength = newComponentResults.length;\n\n    // Head and tail pointers to old parts and new values\n    const oldHead = 0;\n    const newHead = 0;\n    state.state.results = updateComponentResultsArray(\n      newComponentResults,\n      results,\n      oldHead,\n      newHead,\n      oldLength,\n      newLength,\n      container,\n      before,\n    );\n  },\n);\n\nclass DynamicSection implements Field {\n  private readonly state: (RenderResult<unknown> | undefined)[];\n  constructor(private readonly el: Node, private readonly before: Node, length: number) {\n    this.state = new Array(length).fill(undefined);\n  }\n\n  unmount() {\n    for (const result of this.state) {\n      if (result !== undefined && result.unmount !== undefined) {\n        result.unmount(result.data.state);\n      }\n    }\n  }\n\n  init(fieldValues, v) {\n    return this.update(fieldValues, v);\n  }\n\n  update(fieldValues, v) {\n    const container = this.el;\n    let before = this.before;\n    let f = 0;\n    do {\n      const fieldValue = fieldValues[v];\n      const state = this.state[f];\n      this.state[f] = renderValue(fieldValue, state, container, before);\n      if (state !== undefined) {\n        before = state.data.first;\n      }\n      v++;\n      f++;\n    } while (f < this.state.length);\n    return v;\n  }\n}\nexport const dynamicSection = (el: Node, before: Node, length: number) => {\n  return new DynamicSection(el, before, length);\n};\n\nclass ChildrenField implements Field {\n  private state: RenderResult<any, any> | undefined = undefined;\n  constructor(private readonly el: Node, private readonly before: Node | null) {}\n\n  init(fieldValues, v) {\n    return this.update(fieldValues, v);\n  }\n\n  update(fieldValues, v) {\n    const value = fieldValues[v++];\n    this.state = renderValue(value, this.state, this.el, this.before);\n    return v;\n  }\n\n  unmount() {\n    if (this.state !== undefined && this.state.unmount !== undefined) {\n      this.state.unmount(this.state.data.state);\n    }\n  }\n}\nexport const children = <C, V>(el: Node, before: Node | null): ChildrenField => {\n  return new ChildrenField(el, before);\n};\ntype FieldFactory = <E extends Node = any>(root: E) => readonly Field[];\n\nexport const staticFragmentBlueprint = (html: string) => {\n  const template = document.createElement('template');\n  template.innerHTML = html;\n  const rootElement = template.content;\n  return createBlueprint((nothing, container, before) => {\n    const cloned = document.importNode(rootElement, true);\n    container.insertBefore(cloned, before);\n    const first = cloned.firstChild as Node;\n    return renderData(first);\n  });\n};\n\nexport const staticElementBlueprint = (html: string) => {\n  const template = document.createElement('template');\n  template.innerHTML = html;\n  const rootElement: Element = template.content.firstChild as Element;\n  return createBlueprint((nothing, container, before) => {\n    const cloned = document.importNode(rootElement, true);\n    container.insertBefore(cloned, before);\n    return renderData(cloned);\n  });\n};\n\nexport const renderOrReuseComponentResult = <C, V, N extends Node>(\n  componentResult: ComponentResult<C, V, N>,\n  oldResult: RenderResult<C, N> | undefined,\n  container: Node,\n  before: Node | null,\n): RenderResult<C, N> => {\n  if (oldResult === undefined) {\n    return renderComponentResultNoSet(componentResult, container, before);\n  } else if (isReusableRenderResult(componentResult, oldResult)) {\n    if (componentResult.blueprint.update !== undefined) {\n      componentResult.blueprint.update(\n        oldResult.data,\n        componentResult.value,\n        container,\n        before,\n      );\n    }\n    return oldResult;\n  } else {\n    return replaceOldResult(componentResult, container, oldResult, before);\n  }\n};\n\nexport const renderValue = (\n  value: unknown,\n  oldResult: RenderResult<unknown> | undefined,\n  container: Node,\n  before: Node | null,\n): RenderResult<unknown> | undefined => {\n  if (value == null) {\n    if (oldResult !== undefined) {\n      removeUntilBefore(container, oldResult.data.first, before);\n    }\n    return undefined;\n  }\n  const componentResult = componentResultFromValue(value);\n  return renderOrReuseComponentResult(componentResult, oldResult, container, before);\n};\n\nconst initialDomFieldSetter = (fields: readonly Field[], fieldValues: readonly any[]) => {\n  let v = 0;\n  for (let f = 0; f < fields.length; f++) {\n    v = fields[f].init(fieldValues, v);\n  }\n};\n\nconst domFieldSetter = (\n  result: RenderData<readonly Field[]>,\n  fieldValues: readonly any[],\n) => {\n  let v = 0;\n  const fields = result.state;\n  for (let f = 0; f < fields.length; f++) {\n    v = fields[f].update(fieldValues, v);\n  }\n};\n\nconst domFieldUnmount = (fields) => {\n  for (const field of fields) {\n    if (field.unmount !== undefined) {\n      field.unmount();\n    }\n  }\n};\n\nexport const elementBlueprint = (html: string, fieldFactory: FieldFactory) => {\n  const template = document.createElement('template');\n  template.innerHTML = html;\n  const rootElement = template.content.firstChild as Element;\n  return createBlueprint(\n    (fieldValues: readonly any[], container, before) => {\n      const cloned = document.importNode(rootElement, true);\n      const fields = fieldFactory(cloned);\n      initialDomFieldSetter(fields, fieldValues);\n      container.insertBefore(cloned, before);\n      return renderData(cloned, fields);\n    },\n    domFieldSetter,\n    domFieldUnmount,\n  );\n};\n\nexport const fragmentBlueprint = (html: string, fieldFactory: FieldFactory) => {\n  const template = document.createElement('template');\n  template.innerHTML = html;\n  const rootElement = template.content;\n  return createBlueprint(\n    (fieldValues: readonly any[], container, before) => {\n      const cloned = document.importNode(rootElement, true);\n      const first = cloned.firstChild as Node;\n      const fields = fieldFactory(cloned);\n      initialDomFieldSetter(fields, fieldValues);\n      container.insertBefore(cloned, before);\n      return renderData(first, fields);\n    },\n    domFieldSetter,\n    domFieldUnmount,\n  );\n};\n\nclass SpreadField implements Field {\n  private readonly state: { [s: string]: any } = {};\n  constructor(private readonly el: Element) {}\n\n  init(fieldValues, v) {\n    return this.update(fieldValues, v);\n  }\n\n  update(fieldValues, v) {\n    const value = fieldValues[v++];\n    applySpread(this.el, this.state, value);\n    return v;\n  }\n}\nexport const spread = (el: Element) => {\n  return new SpreadField(el);\n};\n\nexport type ComponentResult<C, V, N extends Node = Node> = {\n  blueprint: ComponentBlueprint<C, V, N>;\n  value: V;\n};\n\nexport type RenderData<C, N extends Node = Node> = {\n  first: N;\n  state: C;\n};\nexport type RenderResult<C, N extends Node = Node> = {\n  id: Id;\n  unmount?: Unmount<C>;\n  data: RenderData<C, N>;\n};\n\nexport const removeUntilBefore = (\n  container: Node,\n  startElement: Node | null,\n  stopElement: Node | null,\n) => {\n  while (startElement !== stopElement) {\n    const nextSibling = startElement!.nextSibling;\n    container.removeChild(startElement!);\n    startElement = nextSibling;\n  }\n};\n\nexport const moveUntilBefore = (\n  newContainer: Node,\n  startElement: Node | null,\n  stopElement: Node | null,\n  before: Node | null,\n) => {\n  while (startElement !== stopElement) {\n    const nextSibling = startElement!.nextSibling!;\n    newContainer.insertBefore(startElement!, before);\n    startElement = nextSibling;\n  }\n};\n\nconst setAttribute = (el: Element, key: string, value: any) => {\n  if (value != null) {\n    el.setAttribute(key, value);\n  } else {\n    el.removeAttribute(key);\n  }\n};\n\nconst removeEvent = (el: Element, key: string, eventObject) => {\n  if (eventObject != null) {\n    if (typeof eventObject === 'function') {\n      el.removeEventListener(key, eventObject);\n    } else {\n      el.removeEventListener(key, eventObject.handle, eventObject.options);\n    }\n  }\n};\n\nconst setEvent = (el: Element, key: string, state, newValue) => {\n  removeEvent(el, key, state);\n  if (newValue !== null && newValue !== undefined) {\n    if (typeof newValue === 'function') {\n      el.addEventListener(key, newValue);\n    } else {\n      el.addEventListener(key, newValue.handle, newValue.options);\n    }\n  }\n};\n\nconst EVENT_PREFIX_REGEX = /^\\$\\$/;\nconst PROPERTY_PREFIX_REGEX = /^\\$/;\nconst EVENT_TYPE = 0;\nconst PROPERTY_TYPE = 1;\nconst ATTRIBUTE_TYPE = 2;\nconst fieldInfo = (\n  type: typeof EVENT_TYPE | typeof PROPERTY_TYPE | typeof ATTRIBUTE_TYPE,\n  key: string,\n) => ({\n  type,\n  key,\n});\nconst fieldInfoFromKey = (key: string) => {\n  if (key.match(EVENT_PREFIX_REGEX)) {\n    return fieldInfo(EVENT_TYPE, key.replace(EVENT_PREFIX_REGEX, ''));\n  } else if (key.match(PROPERTY_PREFIX_REGEX)) {\n    return fieldInfo(PROPERTY_TYPE, key.replace(PROPERTY_PREFIX_REGEX, ''));\n  } else {\n    return fieldInfo(ATTRIBUTE_TYPE, key);\n  }\n};\n\nconst applySpread = (el: Element, state, newValue) => {\n  const newKeys = new Set();\n  for (const [prefixedKey, value] of Object.entries(newValue)) {\n    newKeys.add(prefixedKey);\n    if (state[prefixedKey] !== value) {\n      const { type, key } = fieldInfoFromKey(prefixedKey);\n      switch (type) {\n        case ATTRIBUTE_TYPE:\n          setAttribute(el, key, value);\n          break;\n        case PROPERTY_TYPE:\n          el[key] = value;\n          break;\n        case EVENT_TYPE:\n          setEvent(el, key, state, value);\n          break;\n      }\n    }\n  }\n  for (const prefixedKey in state) {\n    if (newKeys.has(prefixedKey)) {\n      continue;\n    }\n    const { type, key } = fieldInfoFromKey(prefixedKey);\n    switch (type) {\n      case ATTRIBUTE_TYPE:\n        el.removeAttribute(key);\n        break;\n      case PROPERTY_TYPE:\n        el[key] = undefined;\n        break;\n      case EVENT_TYPE:\n        removeEvent(el, key, newValue);\n        break;\n    }\n  }\n};\n\nexport type KeyFn<T> = (item: T, index: number) => unknown;\nexport type MapFn<T, R> = (item: T, index: number) => R;\nexport type SetFn<C, V> = (\n  cloneValue: RenderData<C, Node>,\n  value: V,\n  container: Node,\n  before: Node | null,\n) => any;\n\nconst isReusableRenderResult = (\n  componentResult: ComponentResult<any, any, any>,\n  renderResult: RenderResult<any>,\n) => {\n  return renderResult.id === componentResult.blueprint.id;\n};\n\nexport type ItemBlueprint<T> = (item: T, index: number) => unknown;\n\n// Helper for generating a map of array item to its index over a subset\n// of an array (used to lazily generate `newKeyToIndexMap` and\n// `oldKeyToIndexMap`)\nconst generateMap = <T>(list: T[], start: number, end: number) => {\n  const map: Map<T, number> = new Map();\n  for (let i = start; i <= end; i++) {\n    map.set(list[i], i);\n  }\n  return map;\n};\n\ntype RepeatBlueprintInput<V, C, R, N extends Node = Node> = {\n  values: Iterable<V>;\n  mapFn: MapFn<V, ComponentResult<C, R, N>>;\n  keyFn: KeyFn<V>;\n  recycle: boolean;\n};\n\nconst movePart = (\n  oldResult: RenderResult<any, any>,\n  newResult: ComponentResult<any, any, any>,\n  container: Node,\n  oldNextMarker: Node | null,\n  before: Node | null,\n) => {\n  if (isReusableRenderResult(newResult, oldResult)) {\n    moveUntilBefore(container, oldResult.data.first, oldNextMarker, before);\n    if (newResult.blueprint.update !== undefined) {\n      newResult.blueprint.update(\n        oldResult.data.state,\n        newResult.value,\n        container,\n        before,\n      );\n    }\n    return oldResult;\n  } else {\n    return replaceOldResult(newResult, container, oldResult, before);\n  }\n};\n\nconst canReuseRemovedPart = (\n  oldKeyToIndexMap: Map<any, any>,\n  newComponentResults: ComponentResult<any, any, Node>[],\n  newKeys: any[],\n  results: (RenderResult<any, any> | null)[],\n  newIndex: number,\n  oldIndex: number,\n) => {\n  return (\n    !oldKeyToIndexMap.has(newKeys[newIndex]) &&\n    isReusableRenderResult(newComponentResults[newIndex], results[oldIndex]!)\n  );\n};\n\ntype RepeatBlueprintCache<C, N extends Node> = {\n  results: (RenderResult<C, N> | null)[];\n  keys: any[];\n};\nexport const repeatBlueprint = createBlueprint(\n  (initialInput: RepeatBlueprintInput<any, any, any>, initialContainer, before) => {\n    const results: RenderResult<any, any>[] = [];\n    const keys: any[] = [];\n\n    let i = 0;\n    let j = 0;\n    const marker = document.createComment('');\n    initialContainer.insertBefore(marker, before);\n    for (const itemData of initialInput.values) {\n      if (itemData != null) {\n        const componentResult = componentResultFromValue(initialInput.mapFn(itemData, i));\n        const key = initialInput.keyFn(itemData, i);\n        const result = renderComponentResultNoSet(\n          componentResult,\n          initialContainer,\n          before,\n        );\n        keys[j] = key;\n        results[j] = result;\n        j++;\n      }\n      i++;\n    }\n    const state: RepeatBlueprintCache<any, any> = { results, keys };\n    return renderData(marker, state);\n  },\n  (\n    state: RenderData<RepeatBlueprintCache<any, any>>,\n    newInput: RepeatBlueprintInput<any, any, any, any>,\n    container: Node,\n    before: Node | null,\n  ) => {\n    const { results, keys } = state.state;\n    const newComponentResults: ComponentResult<any, any, Node>[] = [];\n    const newKeys: any[] = [];\n    let i = 0;\n    let j = 0;\n    for (const itemValue of newInput.values) {\n      if (itemValue != null) {\n        const componentResult = componentResultFromValue(newInput.mapFn(itemValue, i));\n        const key = newInput.keyFn(itemValue, i);\n        newKeys[j] = key;\n        newComponentResults[j] = componentResult;\n        j++;\n      }\n      i++;\n    }\n\n    const oldLength = results.length;\n    const newLength = newComponentResults.length;\n\n    const newRenderResults: RenderResult<any, any>[] = new Array(newLength);\n\n    // Maps from key to index for current and previous update; these\n    // are generated lazily only when needed as a performance\n    // optimization, since they are only required for multiple\n    // non-contiguous changes in the list, which are less common.\n    let newKeyToIndexMap!: Map<unknown, number>;\n    let oldKeyToIndexMap!: Map<unknown, number>;\n\n    // Head and tail pointers to old parts and new values\n    let oldHead = 0;\n    let oldTail = oldLength - 1;\n\n    let newHead = 0;\n    let newTail = newLength - 1;\n\n    while (oldHead <= oldTail && newHead <= newTail) {\n      if (results[oldHead] === null) {\n        // `null` means old part at head has already been used\n        // below; skip\n        oldHead++;\n      } else if (results[oldTail] === null) {\n        // `null` means old part at tail has already been used\n        // below; skip\n        oldTail--;\n      } else if (keys[oldHead] === newKeys[newHead]) {\n        const nextOldHead = oldHead + 1;\n        // Old head matches new head; update in place\n        newRenderResults[newHead] = renderOrReuseComponentResult(\n          newComponentResults[newHead],\n          results[oldHead]!,\n          container,\n          nextOldHead >= oldLength ? before : results[nextOldHead]!.data.first,\n        )!;\n        oldHead = nextOldHead;\n        newHead++;\n      } else if (keys[oldTail] === newKeys[newTail]) {\n        const nextOldTail = oldTail + 1;\n        // Old tail matches new tail; update in place\n        newRenderResults[newTail] = renderOrReuseComponentResult(\n          newComponentResults[newTail],\n          results[oldTail]!,\n          container,\n          nextOldTail >= oldLength ? before : results[nextOldTail]!.data.first,\n        )!;\n        oldTail--;\n        newTail--;\n      } else if (keys[oldHead] === newKeys[newTail]) {\n        // Old head matches new tail; update and move to new tail\n        const nextOldHead = oldHead + 1;\n        const nextNewTail = newTail + 1;\n        newRenderResults[newTail] = movePart(\n          results[oldHead]!,\n          newComponentResults[newTail],\n          container,\n          results[nextOldHead]!.data.first,\n          nextNewTail < newLength ? newRenderResults[nextNewTail].data.first : before,\n        );\n        oldHead = nextOldHead;\n        newTail--;\n      } else if (keys[oldTail] === newKeys[newHead]) {\n        const nextNewTail = newTail + 1;\n        // Old tail matches new head; update and move to new head\n        newRenderResults[newHead] = movePart(\n          results[oldTail]!,\n          newComponentResults[newHead],\n          container,\n          nextNewTail < newLength ? newRenderResults[nextNewTail]!.data.first : before,\n          results[oldHead]!.data.first,\n        );\n        oldTail--;\n        newHead++;\n      } else {\n        if (newKeyToIndexMap === undefined) {\n          // Lazily generate key-to-index maps, used for removals &\n          // moves below\n          newKeyToIndexMap = generateMap(newComponentResults, newHead, newTail);\n          oldKeyToIndexMap = generateMap(results, oldHead, oldTail);\n        }\n        if (!newKeyToIndexMap.has(keys[oldHead])) {\n          /**\n           * At this point there's no key in the new list that matches the old head's key but there's still a\n           * chance that the new head is a totally new item that happens to share the same blueprint ID as the\n           * old head. If so, we can save quite a lot of time by just reusing the old head's DOM render result\n           * and updating with the new head's values. This has great performance benefits for when you're replacing\n           * a batch of render results with an entirely new set that still happen to share the same key.\n           *\n           * TODO: Might be worth making this more general in the sense that we could technically reuse parts\n           * that don't share the same key, from ANYWHERE within the list\n           * (i.e. Not just matching oldHead with newHead and oldTail with newTail). Not sure if it's worth it\n           * or if it's even very performant.\n           */\n          const nextOldHead = oldHead + 1;\n          const oldNextMarker =\n            nextOldHead < oldLength ? results[nextOldHead]!.data.first : before;\n          if (\n            canReuseRemovedPart(\n              oldKeyToIndexMap,\n              newComponentResults,\n              newKeys,\n              results,\n              newHead,\n              oldHead,\n            )\n          ) {\n            // The new head and old head don't exist in each other's lists but they share the same blueprint; reuse\n            newRenderResults[newHead] = renderOrReuseComponentResult(\n              newComponentResults[newHead],\n              results[oldHead]!,\n              container,\n              oldNextMarker,\n            )!;\n            newHead++;\n          } else {\n            // Old head is no longer in new list; remove\n            removeUntilBefore(container, results[oldHead]!.data.first, oldNextMarker);\n          }\n          oldHead++;\n        } else if (!newKeyToIndexMap.has(keys[oldTail])) {\n          const oldNextMarker =\n            newTail < newLength ? newRenderResults[newTail].data.first : before;\n          if (\n            canReuseRemovedPart(\n              oldKeyToIndexMap,\n              newComponentResults,\n              newKeys,\n              results,\n              newTail,\n              oldTail,\n            )\n          ) {\n            // The new tail and old tail don't exist in each other's lists but they share the same blueprint; reuse\n            newRenderResults[newTail] = renderOrReuseComponentResult(\n              newComponentResults[newTail],\n              results[oldTail]!,\n              container,\n              oldNextMarker,\n            )!;\n            newTail--;\n          } else {\n            // Old tail is no longer in new list; remove\n            removeUntilBefore(container, results[oldTail]!.data.first, oldNextMarker);\n          }\n          oldTail--;\n        } else {\n          // Any mismatches at this point are due to additions or\n          // moves; see if we have an old part we can reuse and move\n          // into place\n          const oldIndex = oldKeyToIndexMap.get(newKeys[newHead]);\n          if (oldIndex === undefined) {\n            newRenderResults[newHead] = renderComponentResultNoSet(\n              newComponentResults[newHead],\n              container,\n              oldHead < oldLength ? results[oldHead]!.data.first : before,\n            );\n          } else {\n            const nextOldIndex = oldIndex + 1;\n            newRenderResults[newHead] = movePart(\n              results[oldIndex]!,\n              newComponentResults[newHead],\n              container,\n              nextOldIndex < oldLength ? results[nextOldIndex]!.data.first : before,\n              results[oldHead]!.data.first,\n            );\n            results[oldIndex] = null;\n          }\n          newHead++;\n        }\n      }\n    }\n\n    const nextNewTail = newTail + 1;\n    if (oldHead <= oldTail) {\n      const firstToRemoveMarker = results[oldHead]!.data.first;\n      const lastToRemoveMarker =\n        nextNewTail < newLength ? newRenderResults[nextNewTail].data.first : before;\n      removeUntilBefore(container, firstToRemoveMarker, lastToRemoveMarker);\n    } else {\n      // Add parts for any remaining new values\n      const insertAdditionalPartsBefore =\n        nextNewTail < newLength ? newRenderResults[nextNewTail].data.first : before;\n      while (newHead <= newTail) {\n        newRenderResults[newHead] = renderComponentResultNoSet(\n          newComponentResults[newHead],\n          container,\n          insertAdditionalPartsBefore,\n        );\n        newHead++;\n      }\n    }\n    state.state.results = newRenderResults;\n    state.state.keys = newKeys;\n  },\n);\n\nconst keyedComponents = <V, C, R, CR extends ComponentResult<C, R, any>>(\n  values: Iterable<V>,\n  keyFn: KeyFn<V>,\n  mapFn: MapFn<V, CR>,\n  recycle: boolean,\n) => {\n  return componentResult(repeatBlueprint, { values, keyFn, mapFn, recycle });\n};\n\nexport const map = <V, C, R, CR extends ComponentResult<C, R, any>>(\n  values: Iterable<V>,\n  keyFn: KeyFn<V>,\n  mapFn: MapFn<V, CR>,\n) => {\n  return keyedComponents<V, C, R, CR>(values, keyFn, mapFn, true);\n};\n\nexport const repeat = <V, C, R, CR extends ComponentResult<C, R, any>>(\n  values: Iterable<V>,\n  keyFn: KeyFn<V>,\n  mapFn: MapFn<V, CR>,\n) => {\n  return keyedComponents<V, C, R, CR>(values, keyFn, mapFn, false);\n};\n\nexport type SFC<P, R> = (props: P) => R;\n\nexport type FC<P, R> = (props: P) => R;\n\nexport const rerender = (target) => {\n  const symbol = Symbol(`${target.key.toString()}-value`);\n  if (target.kind === 'field') {\n    return {\n      ...target,\n      key: symbol,\n      extras: [\n        {\n          kind: 'method',\n          key: target.key,\n          placement: 'prototype',\n          descriptor: {\n            get: function () {\n              return this[symbol];\n            },\n            set: function (value) {\n              this[symbol] = value;\n              this[UPDATE]();\n            },\n          },\n        },\n      ],\n    };\n  } else {\n    const descriptor = (() => {\n      const oldDescriptor = target.descriptor;\n      if (oldDescriptor.value !== undefined) {\n        return {\n          ...oldDescriptor,\n          value: function (...args) {\n            this[symbol](...args);\n            this[UPDATE]();\n          },\n        };\n      } else if (oldDescriptor.set !== undefined) {\n        return {\n          ...oldDescriptor,\n          set: function (value) {\n            this[symbol] = value;\n            this[UPDATE]();\n          },\n        };\n      } else {\n        throw new Error(`Expected either a field, method or setter`);\n      }\n    })();\n    return {\n      ...target,\n      key: symbol,\n      extras: [\n        {\n          ...target,\n          descriptor,\n        },\n      ],\n    };\n  }\n};\n\nexport const UPDATE = Symbol('update');\n\nexport abstract class RootlessDomElement<C, V> extends HTMLElement {\n  protected renderRoot: Node;\n\n  constructor() {\n    super();\n    this.renderRoot = this.mountRenderRoot();\n  }\n\n  abstract mountRenderRoot(): Node;\n\n  connectedCallback() {\n    this[UPDATE]();\n  }\n\n  disconnectedCallback() {\n    render(null, this.renderRoot);\n  }\n\n  [UPDATE]() {\n    const result = this.render();\n    render(result, this.renderRoot);\n  }\n\n  abstract render(): ComponentResult<C, V, Node>;\n}\n\n\nexport abstract class LightDomElement<C, V> extends RootlessDomElement<C, V> {\n  mountRenderRoot() {\n    return this;\n  }\n}\n\nexport abstract class DomElement<C, V> extends RootlessDomElement<C, V> {\n  mountRenderRoot() {\n    return this.attachShadow({ mode: 'open' });\n  }\n}\n\n/*\nexport type StateSetter<S> = (state: S) => void;\nexport type StatefulComponent<P, S, R> = (props: P, statePatch: S, setState: StateSetter<S>) => R;\ntype InternalState<S, C, V> = {\n  previousRenderResult: RenderResult<C, V> | null,\n  readonly state: S,\n  readonly setState: (statePatch: Partial<S>) => void\n};\nexport const withState = <C, P, S extends {}, R>(\n  sfcWithState: StatefulComponent<P, S, R>,\n  initialState: S\n): SFC<P, ComponentResult<InternalState<S, C, R>, P>> => {\n  const stateBlueprint = createBlueprint((initialProps: P, container, before) => {\n    const state = Object.create(initialState);\n    const setState = (statePatch) => {\n      Object.assign(state, statePatch);\n    };\n    const initialComponentResult = componentResultFromValue(sfcWithState(initialProps, state, setState));\n    const previousRenderResult: RenderResult<C, P> | null = initialComponentResult !== null ? renderComponentResultNoSet(initialComponentResult, container, before) : null;\n    const internalState: InternalState<S, C, R> =  { previousRenderResult, state, setState };\n    return internalState;\n  }, (internalState, props, container, before) => {\n    const { previousRenderResult, state, setState } = internalState;\n    const componentResult = componentResultFromValue(sfcWithState(props, state, setState));\n    if (componentResult) {\n      if (previousRenderResult !== null && isReusableRenderResult(componentResult, previousRenderResult)) {\n        if (componentResult.blueprint.update) {\n          componentResult.blueprint.update(previousRenderResult.state, props, container, before);\n        }\n      } else {\n        internalState.previousRenderResult = renderComponentResultNoSet(componentResult, container, before);\n      }\n    } else {\n      internalState.previousRenderResult = null;\n    }\n    // TODO: Shouldn't be null\n    return null;\n  });\n  return (props: P) => ({\n    blueprint: stateBlueprint,\n    value: props\n  })\n};*/\n"],"file":"index.js"}