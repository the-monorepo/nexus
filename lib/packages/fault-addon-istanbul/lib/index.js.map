{"version":3,"sources":["../src/index.ts"],"names":["report","testResults","contextOptions","totalCoverage","coverage","values","merge","context","tree","summarizers","pkg","forEach","reporter","visit","createPlugin","plugin","on","complete","testerResults","defaultPlugin","undefined"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAGO,MAAMA,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,EAAkBC,cAAlB,KAAqC;AACzD,QAAMC,aAAa,GAAG,4CAAkB,EAAlB,CAAtB;;AACA,OAAK,MAAM;AAAEC,IAAAA;AAAF,GAAX,IAA2BH,WAAW,CAACI,MAAZ,EAA3B,EAAiD;AAC/CF,IAAAA,aAAa,CAACG,KAAd,CAAoBF,QAApB;AACD;;AACD,QAAMG,OAAO,GAAG,sCAAcL,cAAd,CAAhB;;AAEA,QAAMM,IAAI,GAAGC,+BAAYC,GAAZ,CAAgBP,aAAhB,CAAb;;AACA,GAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyBQ,OAAzB,CAAiCC,QAAQ,IACvCJ,IAAI,CAACK,KAAL,CAAW,6BAAOD,QAAP,EAAwB,EAAxB,CAAX,EAAwCL,OAAxC,CADF;AAGD,CAXM;;;;AAaA,MAAMO,YAAY,GAAGZ,cAAc,IAAI;AAC5C,QAAMa,MAA8B,GAAG;AACrCC,IAAAA,EAAE,EAAE;AACFC,MAAAA,QAAQ,EAAGC,aAAD,IAAkC;AAC1ClB,QAAAA,MAAM,CAACkB,aAAD,EAAgBhB,cAAhB,CAAN;AACD;AAHC;AADiC,GAAvC;AAOA,SAAOa,MAAP;AACD,CATM;;;AAUA,MAAMI,aAAa,GAAGL,YAAY,CAACM,SAAD,CAAlC;;eAEQD,a","sourcesContent":["import { createContext, summarizers } from 'istanbul-lib-report';\r\nimport { create } from 'istanbul-reports';\r\nimport { createCoverageMap } from 'istanbul-lib-coverage';\r\nimport { PartialTestHookOptions } from '@fault/addon-hook-schema';\r\nimport { TesterResults } from '@fault/types';\r\nexport const report = ({ testResults }, contextOptions) => {\r\n  const totalCoverage = createCoverageMap({});\r\n  for (const { coverage } of testResults.values()) {\r\n    totalCoverage.merge(coverage);\r\n  }\r\n  const context = createContext(contextOptions);\r\n\r\n  const tree = summarizers.pkg(totalCoverage);\r\n  ['json', 'lcov', 'text'].forEach(reporter =>\r\n    tree.visit(create(reporter as any, {}), context),\r\n  );\r\n};\r\n\r\nexport const createPlugin = contextOptions => {\r\n  const plugin: PartialTestHookOptions = {\r\n    on: {\r\n      complete: (testerResults: TesterResults) => {\r\n        report(testerResults, contextOptions);\r\n      },\r\n    },\r\n  };\r\n  return plugin;\r\n};\r\nexport const defaultPlugin = createPlugin(undefined);\r\n\r\nexport default defaultPlugin;\r\n"],"file":"index.js"}