{"version":3,"sources":["../src/extractTypeInfo.ts"],"names":["defaultTypeTests","runTypeTests","extractTypeInfo","examples","typeTests","arrayOfExamples","Array","isArray","nullCount","undefinedCount","values","types","map","value"],"mappings":";;AAAA,SAASA,gBAAT,QAAiC,oBAAjC;AAEA,SAASC,YAAT,QAA6B,gBAA7B;AAEA,OAAO,SAASC,eAAT,CACLC,QADK,EAGY;AAAA,MADjBC,SACiB,uEADLJ,gBAAgB,CAACE,eAAD,CACX;AACjB,MAAMG,eAAoB,GAAGC,KAAK,CAACC,OAAN,CAAcJ,QAAd,IAA0BA,QAA1B,GAAqC,CAACA,QAAD,CAAlE;AACA,MAAM;AAAEK,IAAAA,SAAF;AAAaC,IAAAA,cAAb;AAA6BC,IAAAA;AAA7B,MAAwCT,YAAY,CAACI,eAAD,EAAkBD,SAAlB,CAA1D;AACA,SAAO;AACLI,IAAAA,SADK;AAELC,IAAAA,cAFK;AAGLE,IAAAA,KAAK,EAAED,MAAM,CAACE,GAAP,CAAWC,KAAK,IAAIA,KAAK,CAACV,QAAD,CAAzB;AAHF,GAAP;AAKD","sourcesContent":["import { defaultTypeTests } from './defaultTypeTests';\nimport { DefaultTypeInfo, DefaultType } from './type-info-types';\nimport { runTypeTests } from './runTypeTests';\n\nexport function extractTypeInfo<T>(\n  examples: T[] | T,\n  typeTests = defaultTypeTests(extractTypeInfo),\n): DefaultTypeInfo {\n  const arrayOfExamples: T[] = Array.isArray(examples) ? examples : [examples];\n  const { nullCount, undefinedCount, values } = runTypeTests(arrayOfExamples, typeTests);\n  return {\n    nullCount,\n    undefinedCount,\n    types: values.map(value => value(examples)),\n  };\n}\n"],"file":"extractTypeInfo.js"}